on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: windows-latest, r: '4.0'}
        - { os: macOS-latest, r: '4.0'}
        - { os: ubuntu-16.04, r: '4.0', cran: "https://packagemanager.rstudio.com/all/__linux__/xenial/latest"}
        - { os: ubuntu-18.04, r: '4.0', cran: "https://packagemanager.rstudio.com/all/__linux__/bionic/latest"}
        - { os: ubuntu-20.04, r: '4.0', cran: "https://packagemanager.rstudio.com/all/__linux__/focal/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}

    steps:
      - name: Install system libraries
        if: ${{ runner.os == 'Linux'  }}
        run: |
          sudo apt-get install libcurl4-openssl-dev
          
      - name: Install Mac system libraries
        if: ${{ matrix.config.os == 'macOS-latest' }}
        run: |
          brew install openssl
    
      - name: Configure git
        run: | 
          git config --global core.autocrlf false
          git config --global user.email "ghau@example.com"
          git config --global user.name "GitHub Actions User"
        
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master
      - uses: r-lib/actions/setup-tinytex@master
      
      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ matrix.config.r }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ matrix.config.r }}-r-${{ matrix.config.r }}-1-

      - name: Install dependencies
        run: |
          install.packages(c('BiocManager', 'rcmdcheck'))
          BiocManager::install(ask = FALSE, update = TRUE)
          toInstall <- remotes::dev_package_deps(dependencies = TRUE)[,'package']
          toInstall <- setdiff(toInstall, installed.packages()[,'Package'])
          if(length(toInstall)) { BiocManager::install(toInstall, ask = FALSE) }
        shell: Rscript {0}

      - name: Check
        run: Rscript -e "rcmdcheck::rcmdcheck(args = c('--no-manual', '--no-vignettes'), error_on = 'warning', check_dir = 'check')"

      - name: Upload check results
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.config.os }}-r${{ matrix.config.r }}-results
          path: check/*.Rcheck/00install.out
